kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-crypt-nodeplugin
  labels:
    app.kubernetes.io/part-of: csi-crypt
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/name: csi-crypt-nodeplugin
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: csi-crypt
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/name: csi-crypt-nodeplugin
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: csi-crypt
        app.kubernetes.io/component: csi-driver
        app.kubernetes.io/name: csi-crypt-nodeplugin
    spec:
      serviceAccountName: csi-crypt-nodeplugin
      containers:
        - name: csi-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v1.3.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/csi-crypt/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          resources: {}
        - name: csi-crypt-nodeplugin
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: ghcr.io/lykos153/csi-crypt:main
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://plugin/csi.sock
            - name: CSI_ROLE
              value: "nodeplugin"
            - name: KUBELET_DIR
              value: /var/lib/kubelet
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
          resources: {}
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi-crypt
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
