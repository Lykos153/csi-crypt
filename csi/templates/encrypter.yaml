apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ encrypterName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: lcrypt
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/name: encrypter
      lcrypt.silvio-ankermann.de/volume-id: {{ volumeId }}
  template:
    metadata:
      name: encrypter-{{ volumeId }}
      labels:
        app.kubernetes.io/part-of: lcrypt
        app.kubernetes.io/component: csi-driver
        app.kubernetes.io/name: encrypter
        lcrypt.silvio-ankermann.de/volume-id: {{ volumeId }}
    spec:
      imagePullPolicy: Always #debugging
      {% if pullSecret %}
      imagePullSecrets:
        - name: {{ pullSecret }}
      {% endif %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - {{ nodeHostname }}
      containers:
        - name: encrypter
          image: {{ imageName }}
          stdin: true #debugging
          tty: true #debugging
          securityContext:
            privileged: true
          env:
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ secretName }}
                  key: encryption-key
            - name: TARGET_PATH
              value: {{ targetPath }}
            - name: SOURCE_PATH
              value: /storage
          volumeMounts:
            - name: pods-mount-dir
              mountPath: {{ kubeletDir }}/pods
              mountPropagation: "Bidirectional"
            - name: storage-backend
              mountPath: /storage
      volumes:
        - name: pods-mount-dir
          hostPath:
            path: {{ kubeletDir }}/pods
            type: Directory
        - name: storage-backend
          persistentVolumeClaim:
            claimName: {{ backendClaimName }}
---
kind: Secret
apiVersion: v1
type: Opaque
metadata:
  name: {{ secretName }}
stringData:
  encryption-key: {{ encryptionKey }}
